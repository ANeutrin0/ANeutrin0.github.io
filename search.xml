<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python程序设计-B站热门视频数据可视化</title>
      <link href="/2025/06/05/B%E7%AB%99top100%E7%83%AD%E9%97%A8%E8%A7%86%E9%A2%91%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
      <url>/2025/06/05/B%E7%AB%99top100%E7%83%AD%E9%97%A8%E8%A7%86%E9%A2%91%E6%95%B0%E6%8D%AE%E7%88%AC%E5%8F%96%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h1><p>本项目为《Python程序设计》课程的期末作业，聚焦于对B站（哔哩哔哩）热门视频榜单数据的抓取与可视化分析。通过使用 Python 编写爬虫脚本，获取指定时间段内的热门视频信息（包括标题、分区、播放量、点赞率、投币率、弹幕数等），并借助 ECharts 等前端可视化工具进行数据呈现。</p><p>本网页所展示数据为2025年6月5日爬取。</p><h1 id="Web可视化"><a href="#Web可视化" class="headerlink" title="Web可视化"></a>Web可视化</h1><p>请直接访问以下链接体验~（因网页尺寸被压缩，若弹窗右上角关闭按钮识别困难可点击周围空白界面退出）</p><p><a href="/html/interactive_bilibili_hot_100.html" target="_blank">点击这里跳转新页面</a></p><h1 id="程序运行视频解说"><a href="#程序运行视频解说" class="headerlink" title="程序运行视频解说"></a>程序运行视频解说</h1><div style="text-align:center">  <video controls         playsinline webkit-playsinline x5-playsinline         preload="metadata"         width="640"         style="max-width:100%;background:#000;">    <source src="/videos/Program_Demo_0605.mp4" type="video/mp4">    您的浏览器不支持 HTML5 视频。  </video></div><h1 id="程序运行图文解说"><a href="#程序运行图文解说" class="headerlink" title="程序运行图文解说"></a>程序运行图文解说</h1><h3 id="项目概述"><a href="#项目概述" class="headerlink" title="项目概述"></a>项目概述</h3><p>本项目旨在从 Bilibili 获取热门视频数据，进行数据处理、分析，并通过交互式网页图表进行可视化展示。</p><p>示例数据获取时间为 6 月 5 日 17 时。</p><hr><h3 id="一、程序构思"><a href="#一、程序构思" class="headerlink" title="一、程序构思"></a>一、程序构思</h3><ol><li><p><strong>目标：</strong></p><ul><li>获取 Bilibili 全站热门排行榜 Top100 的视频数据。</li><li>对数据进行清洗和处理。</li><li>进行多维度数据分析，例如：<ul><li>各分区的视频数量分布。</li><li>不同分区的平均播放量、点赞数等。</li><li>播放量、点赞数、投币数之间的关系。</li><li>视频时长分布。</li><li>视频发布时间规律。</li></ul></li><li>通过网页实现交互式的数据可视化，方便用户查看和探索数据。</li></ul></li><li><p><strong>技术选型：</strong></p><ul><li><p>后端 &#x2F; 数据处理：</p><ul><li>编程语言：Python</li><li>网络请求：<code>requests</code> 库</li><li>数据处理与分析：<code>pandas</code> 库</li><li>静态图表生成：<code>matplotlib</code> 库</li></ul></li><li><p>前端 &#x2F; 可视化：</p><ul><li>HTML, CSS, JavaScript</li><li>图表库：<code>ECharts.js</code></li></ul></li></ul></li><li><p><strong>核心功能模块：</strong></p><ul><li>数据爬取模块（<code>crawler.py</code>）</li><li>数据分析模块（<code>analysis.py</code>，用于生成静态图表）</li><li>数据存储模块（Excel 文件 <code>bilibili_hot100.xlsx</code>，JSON 文件 <code>bilibili_hot100.json</code>）</li><li>交互式可视化模块（<code>interactive_bilibili_hot_100.html</code>）</li></ul></li></ol><hr><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="1-数据获取（crawler-py）"><a href="#1-数据获取（crawler-py）" class="headerlink" title="1. 数据获取（crawler.py）"></a>1. 数据获取（<code>crawler.py</code>）</h4><ul><li>使用 <code>requests</code>, <code>pandas</code>, <code>datetime</code> 库  </li><li>模拟浏览器访问 B站 API，防反爬  </li><li>获取 Top100 榜单数据，保存为 Excel &#x2F; JSON</li></ul><p><strong>实现步骤：</strong></p><ol><li><p>使用 <code>requests.get()</code> 方法，携带必要的 <code>headers</code>，向 B站 API 发送请求  </p></li><li><p>获取 API 返回的 JSON 数据  </p></li><li><p>解析 JSON 数据，提取字段，如：排名、标题、BV号、UP主、分区、播放数、点赞数、投币数等  </p></li><li><p>使用 <code>pandas</code> 构建 DataFrame  </p></li><li><p>保存为 Excel 文件：</p>   <div style="text-align:center">     <img src="/img/0605002.png"          alt="0605002"          style="max-width:100%;border:1px solid #ccc;padding:5px;">   </div>   </li><li><p>同时保存为 JSON 文件（如 <code>bilibili_hot100.json</code>）</p>   <div style="text-align:center">     <img src="/img/0605003.png"          alt="0605003"          style="max-width:100%;border:1px solid #ccc;padding:5px;">   </div>   </li></ol><hr><h4 id="2-数据分析与静态图表生成（analysis-py）"><a href="#2-数据分析与静态图表生成（analysis-py）" class="headerlink" title="2. 数据分析与静态图表生成（analysis.py）"></a>2. 数据分析与静态图表生成（<code>analysis.py</code>）</h4><ul><li>使用 <code>pandas</code>, <code>matplotlib.pyplot</code>, <code>pathlib</code>  </li><li>生成统计图表用于初步分析</li></ul><div style="text-align:center">  <img src="/img/0605004.png"       alt="0605004"       style="max-width:100%;border:1px solid #ccc;padding:5px;"></div><p><strong>示例图表：</strong></p><ul><li><p><code>cat_count.png</code>：分区出现次数</p>  <div style="text-align:center">    <img src="/img/cat_count.png"         alt="cat_count"         style="max-width:100%;border:1px solid #ccc;padding:5px;">  </div>  </li><li><p><code>dur_hist.png</code>：视频时长分布</p>  <div style="text-align:center">    <img src="/img/dur_hist.png"         alt="dur_hist"         style="max-width:100%;border:1px solid #ccc;padding:5px;">  </div>  </li><li><p><code>play_like_corr.png</code>：播放量与点赞数热力图</p>  <div style="text-align:center">    <img src="/img/play_like_corr.png"         alt="play_like_corr"         style="max-width:100%;border:1px solid #ccc;padding:5px;">  </div>  </li><li><p><code>play_mean_by_cat.png</code>：分区平均播放量</p>  <div style="text-align:center">    <img src="/img/play_mean_by_cat.png"         alt="play_mean_by_cat"         style="max-width:100%;border:1px solid #ccc;padding:5px;">  </div>  </li><li><p><code>play_vs_like_scatter.png</code>：播放量 Vs 点赞量气泡图</p>  <div style="text-align:center">    <img src="/img/play_vs_like_scatter.png"         alt="play_vs_like_scatter"         style="max-width:100%;border:1px solid #ccc;padding:5px;">  </div>  </li></ul><hr><h4 id="3-交互式-Web-可视化（interactive-bilibili-hot-100-html）"><a href="#3-交互式-Web-可视化（interactive-bilibili-hot-100-html）" class="headerlink" title="3. 交互式 Web 可视化（interactive_bilibili_hot_100.html）"></a>3. 交互式 Web 可视化（<code>interactive_bilibili_hot_100.html</code>）</h4><h5 id="HTML结构与引入"><a href="#HTML结构与引入" class="headerlink" title="HTML结构与引入"></a>HTML结构与引入</h5><div style="text-align:center">  <img src="/img/0605005.png"       alt="0605005"       style="max-width:100%;border:1px solid #ccc;padding:5px;"></div><ul><li>引入 <code>echarts.min.js</code> 和 <code>macarons.js</code> 主题</li><li><code>&lt;title&gt;Bilibili 热榜 Top100 · 交互数据分析&lt;/title&gt;</code></li><li>包含基本 CSS 样式</li></ul><h5 id="交互按钮设计："><a href="#交互按钮设计：" class="headerlink" title="交互按钮设计："></a>交互按钮设计：</h5><div style="text-align:center">  <img src="/img/0605006.png"       alt="0605006"       style="max-width:100%;border:1px solid #ccc;padding:5px;"></div><ul><li>按钮控制切换不同图表（分区饼图、Top10 等）</li><li>使用 <code>data-chart</code> 属性做事件绑定</li></ul><h5 id="数据注入与图表初始化："><a href="#数据注入与图表初始化：" class="headerlink" title="数据注入与图表初始化："></a>数据注入与图表初始化：</h5><div style="text-align:center">  <img src="/img/0605007.png"       alt="0605007"       style="max-width:100%;border:1px solid #ccc;padding:5px;"></div><ul><li>使用 JS 常量 <code>const DATA = &#123;...&#125;</code> 注入 JSON 数据</li><li>ECharts 渲染图表，根据按钮动态切换视图</li></ul><h5 id="网页呈现效果示例："><a href="#网页呈现效果示例：" class="headerlink" title="网页呈现效果示例："></a>网页呈现效果示例：</h5><ul><li><p>柱状图展示分区数量：</p>  <div style="text-align:center">    <img src="/img/0605008.png"         alt="0605008"         style="max-width:100%;border:1px solid #ccc;padding:5px;">  </div>  </li><li><p>原始数据表格视图 + 筛选功能：</p>  <div style="text-align:center">    <img src="/img/0605009.png"         alt="0605009"         style="max-width:100%;border:1px solid #ccc;padding:5px;">  </div>  </li></ul><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>本项目通过 Python 爬虫获取 B站热榜数据，结合 pandas 和 matplotlib 进行初步分析，最终使用 ECharts 构建交互式网页进行数据可视化展示。<br>项目覆盖了从爬取、清洗、分析到可视化的完整流程，展示了数据驱动内容分析的应用价值。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网页抓取与数据处理-回文诗</title>
      <link href="/2025/05/30/AI%E9%9F%B3%E4%B9%90%E4%BD%9C%E4%B8%9A%EF%BC%882%EF%BC%89-%20%E5%9B%9E%E6%96%87%E8%AF%97/"/>
      <url>/2025/05/30/AI%E9%9F%B3%E4%B9%90%E4%BD%9C%E4%B8%9A%EF%BC%882%EF%BC%89-%20%E5%9B%9E%E6%96%87%E8%AF%97/</url>
      
        <content type="html"><![CDATA[<h1 id="《回文·花月》：AI回文诗歌曲MV制作流程"><a href="#《回文·花月》：AI回文诗歌曲MV制作流程" class="headerlink" title="《回文·花月》：AI回文诗歌曲MV制作流程"></a>《回文·花月》：AI回文诗歌曲MV制作流程</h1><hr><p>本作品围绕“寒月对影”的意象，创作了一首回文诗，结合虚拟歌姬演唱与AI生成伴奏、动态画面，完成了一部风格独特的古风音乐视频。整个过程融合了 GPT 文本生成、Python 作曲、XStudio 歌声合成、Trae AI辅助代码与 Sora 画面生成技术。</p><hr><h2 id="🎼-最终成品"><a href="#🎼-最终成品" class="headerlink" title="🎼 最终成品"></a>🎼 最终成品</h2><div style="text-align:center">  <video controls         playsinline webkit-playsinline x5-playsinline         preload="metadata"         width="640"         style="max-width:100%;background:#000;">    <source src="/videos/final-video.mp4" type="video/mp4">    您的浏览器不支持 HTML5 视频。  </video></div><h2 id="🎼-视频制作流程"><a href="#🎼-视频制作流程" class="headerlink" title="🎼 视频制作流程"></a>🎼 视频制作流程</h2><div style="text-align:center">  <video controls         playsinline webkit-playsinline x5-playsinline         preload="metadata"         width="640"         style="max-width:100%;background:#000;">    <source src="/videos/huiwen-video.mp4" type="video/mp4">    您的浏览器不支持 HTML5 视频。  </video></div><h2 id="🎼-图文制作流程"><a href="#🎼-图文制作流程" class="headerlink" title="🎼 图文制作流程"></a>🎼 图文制作流程</h2><h3 id="✒️-1-GPT生成歌词与初版伴奏（Python）"><a href="#✒️-1-GPT生成歌词与初版伴奏（Python）" class="headerlink" title="✒️ 1. GPT生成歌词与初版伴奏（Python）"></a>✒️ 1. GPT生成歌词与初版伴奏（Python）</h3><ul><li><p>利用 ChatGPT 编写古风回文诗句。</p></li><li><p>📝 回文歌词展示</p></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">月寒风静，花落云轻。  </span><br><span class="line">山遥水阔，夜静星明。  </span><br><span class="line">琴幽梦远，雁影烟平。  </span><br><span class="line">心闲道浅，意远情清。</span><br><span class="line"></span><br><span class="line">清情远意，浅道闲心。  </span><br><span class="line">平烟影雁，远梦幽琴。  </span><br><span class="line">明星静夜，阔水遥山。  </span><br><span class="line">轻云落花，静风寒月。</span><br></pre></td></tr></table></figure><ul><li>使用 Python（<code>mido</code>）生成基础伴奏 MIDI 文件。</li><li>初版节奏为 4&#x2F;4 拍，60 BPM，乐器选择以钢琴为主，加入气口。</li><li>📝示例代码片段如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># filename: generate_poem_motif_with_rest.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> mido <span class="keyword">import</span> MidiFile, MidiTrack, Message, MetaMessage, bpm2tempo</span><br><span class="line"></span><br><span class="line"><span class="comment"># ────────── 可调节参数 ──────────</span></span><br><span class="line">TEMPO_BPM   = <span class="number">90</span>          </span><br><span class="line">VELOCITY    = <span class="number">70</span>          </span><br><span class="line">BASE_NOTE   = <span class="number">60</span>          <span class="comment"># C4</span></span><br><span class="line">GROUPS      = <span class="number">5</span>           <span class="comment"># 共5组动机</span></span><br><span class="line">TICKS_PER_BEAT = <span class="number">480</span>      <span class="comment"># 默认分辨率</span></span><br><span class="line"><span class="comment"># 原始动机（4小节，每字1拍）</span></span><br><span class="line">MOTIF = [</span><br><span class="line">    [<span class="number">60</span>, <span class="number">62</span>, <span class="number">64</span>, <span class="number">67</span>],  <span class="comment"># 月寒风静</span></span><br><span class="line">    [<span class="number">67</span>, <span class="number">64</span>, <span class="number">62</span>, <span class="number">60</span>],  <span class="comment"># 花落云轻</span></span><br><span class="line">    [<span class="number">60</span>, <span class="number">64</span>, <span class="number">67</span>, <span class="number">69</span>],  <span class="comment"># 山遥水阔</span></span><br><span class="line">    [<span class="number">69</span>, <span class="number">67</span>, <span class="number">64</span>, <span class="number">62</span>],  <span class="comment"># 夜静星明</span></span><br><span class="line">]</span><br><span class="line"><span class="comment"># ──────────────────────────────</span></span><br><span class="line"></span><br><span class="line">PENTATONIC_DEGREES = &#123;<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">9</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">in_scale</span>(<span class="params">note: <span class="built_in">int</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">    <span class="keyword">return</span> note % <span class="number">12</span> <span class="keyword">in</span> PENTATONIC_DEGREES</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">shift_up</span>(<span class="params">note: <span class="built_in">int</span>, steps: <span class="built_in">int</span> = <span class="number">1</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">    new_note, moved = note, <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> moved &lt; steps:</span><br><span class="line">        new_note += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> in_scale(new_note):</span><br><span class="line">            moved += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> new_note</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">transpose_motif</span>(<span class="params">motif: <span class="built_in">list</span>[<span class="built_in">list</span>[<span class="built_in">int</span>]], steps: <span class="built_in">int</span></span>) -&gt; <span class="built_in">list</span>[<span class="built_in">list</span>[<span class="built_in">int</span>]]:</span><br><span class="line">    <span class="keyword">if</span> steps == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> motif</span><br><span class="line">    <span class="keyword">return</span> [[shift_up(n, steps) <span class="keyword">for</span> n <span class="keyword">in</span> bar] <span class="keyword">for</span> bar <span class="keyword">in</span> motif]</span><br><span class="line"></span><br><span class="line"><span class="comment"># ────────── MIDI 生成 ──────────</span></span><br><span class="line">mid   = MidiFile()</span><br><span class="line">track = MidiTrack()</span><br><span class="line">mid.tracks.append(track)</span><br><span class="line"></span><br><span class="line">track.append(MetaMessage(<span class="string">&#x27;set_tempo&#x27;</span>, tempo=bpm2tempo(TEMPO_BPM)))</span><br><span class="line">track.append(Message(<span class="string">&#x27;program_change&#x27;</span>, program=<span class="number">0</span>, time=<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">one_beat = TICKS_PER_BEAT</span><br><span class="line">one_measure = <span class="number">4</span> * one_beat</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> g <span class="keyword">in</span> <span class="built_in">range</span>(GROUPS):</span><br><span class="line">    <span class="comment"># 确定上行模进的阶数</span></span><br><span class="line">    steps = <span class="number">0</span> <span class="keyword">if</span> (g == <span class="number">0</span> <span class="keyword">or</span> g == GROUPS - <span class="number">1</span>) <span class="keyword">else</span> g</span><br><span class="line">    current = transpose_motif(MOTIF, steps)</span><br><span class="line">    <span class="keyword">for</span> bar <span class="keyword">in</span> current:</span><br><span class="line">        <span class="keyword">for</span> note <span class="keyword">in</span> bar:</span><br><span class="line">            track.append(Message(<span class="string">&#x27;note_on&#x27;</span>, note=note, velocity=VELOCITY, time=<span class="number">0</span>))</span><br><span class="line">            track.append(Message(<span class="string">&#x27;note_off&#x27;</span>, note=note, velocity=VELOCITY, time=one_beat))</span><br><span class="line">    <span class="comment"># 每组后加入1小节休止</span></span><br><span class="line">    track.append(Message(<span class="string">&#x27;note_off&#x27;</span>, note=<span class="number">0</span>, velocity=<span class="number">0</span>, time=one_measure))</span><br><span class="line"></span><br><span class="line">mid.save(<span class="string">&quot;five_tone_poem_full_with_rest.mid&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;✅ 加气口版本已生成：five_tone_poem_full_with_rest.mid&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="🎤-2-Trae修改伴奏，X-studio虚拟歌姬演唱调试"><a href="#🎤-2-Trae修改伴奏，X-studio虚拟歌姬演唱调试" class="headerlink" title="🎤 2. Trae修改伴奏，X studio虚拟歌姬演唱调试"></a>🎤 2. Trae修改伴奏，X studio虚拟歌姬演唱调试</h3><ul><li>反复修改代码和伴奏</li><li>终版伴奏展示</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> mido <span class="keyword">import</span> MidiFile, MidiTrack, Message, MetaMessage, bpm2tempo</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> tempfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># ────────── CONFIGURATION ──────────</span></span><br><span class="line">TEMPO_BPM   = <span class="number">90</span>          <span class="comment"># beats per minute</span></span><br><span class="line">VELOCITY_MELODY = <span class="number">70</span>      <span class="comment"># MIDI velocity for melody</span></span><br><span class="line">VELOCITY_CHORDS = <span class="number">50</span>      <span class="comment"># MIDI velocity for chords</span></span><br><span class="line">VELOCITY_DRUMS  = <span class="number">80</span>      <span class="comment"># MIDI velocity for drums</span></span><br><span class="line">GROUPS      = <span class="number">5</span>           <span class="comment"># 5 groups of the 16‑syllable motif</span></span><br><span class="line">INTRO_MEAS  = <span class="number">4</span>           <span class="comment"># 4‑bar intro before melody starts (增加前奏长度)</span></span><br><span class="line">REST_MEAS   = <span class="number">1</span>           <span class="comment"># 1‑bar rest between groups (气口)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pentatonic scale degrees relative to C</span></span><br><span class="line">PENTA_DEGREES = &#123;<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">9</span>&#125;</span><br><span class="line">BASE_NOTE = <span class="number">60</span>  <span class="comment"># C4 as 宫</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Original 4‑bar motif (one bar = one four‑character line)</span></span><br><span class="line">MOTIF = [</span><br><span class="line">    [<span class="number">60</span>, <span class="number">62</span>, <span class="number">64</span>, <span class="number">67</span>],  <span class="comment"># 月寒风静</span></span><br><span class="line">    [<span class="number">67</span>, <span class="number">64</span>, <span class="number">62</span>, <span class="number">60</span>],  <span class="comment"># 花落云轻</span></span><br><span class="line">    [<span class="number">60</span>, <span class="number">64</span>, <span class="number">67</span>, <span class="number">69</span>],  <span class="comment"># 山遥水阔</span></span><br><span class="line">    [<span class="number">69</span>, <span class="number">67</span>, <span class="number">64</span>, <span class="number">62</span>],  <span class="comment"># 夜静星明</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Percussion note numbers (GM standard)</span></span><br><span class="line">KICK   = <span class="number">36</span>  <span class="comment"># Acoustic Bass Drum</span></span><br><span class="line">SNARE  = <span class="number">38</span>  <span class="comment"># Acoustic Snare</span></span><br><span class="line">HIHAT  = <span class="number">42</span>  <span class="comment"># Closed Hi‑Hat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ────────── HELPER FUNCTIONS ──────────</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">in_scale</span>(<span class="params">note: <span class="built_in">int</span></span>) -&gt; <span class="built_in">bool</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Return True if note belongs to C pentatonic.&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> note % <span class="number">12</span> <span class="keyword">in</span> PENTA_DEGREES</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">shift_up</span>(<span class="params">note: <span class="built_in">int</span>, steps: <span class="built_in">int</span> = <span class="number">1</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Shift note up by `steps` pentatonic degrees without leaving the scale.&quot;&quot;&quot;</span></span><br><span class="line">    moved, n = <span class="number">0</span>, note</span><br><span class="line">    <span class="keyword">while</span> moved &lt; steps:</span><br><span class="line">        n += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> in_scale(n):</span><br><span class="line">            moved += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> n</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">transpose_motif</span>(<span class="params">motif, steps: <span class="built_in">int</span></span>):</span><br><span class="line">    <span class="keyword">if</span> steps == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> motif</span><br><span class="line">    <span class="keyword">return</span> [[shift_up(n, steps) <span class="keyword">for</span> n <span class="keyword">in</span> bar] <span class="keyword">for</span> bar <span class="keyword">in</span> motif]</span><br><span class="line"></span><br><span class="line"><span class="comment"># ────────── 创建两个MIDI文件：伴奏和人声 ──────────</span></span><br><span class="line"><span class="comment"># 伴奏MIDI文件</span></span><br><span class="line">accompaniment_mid = MidiFile()</span><br><span class="line"><span class="comment"># 人声MIDI文件</span></span><br><span class="line">vocal_mid = MidiFile()</span><br><span class="line"></span><br><span class="line"><span class="comment"># ────────── 伴奏文件设置 ──────────</span></span><br><span class="line"><span class="comment"># Tempo/Meta track for accompaniment</span></span><br><span class="line">acc_meta_tr = MidiTrack(); accompaniment_mid.tracks.append(acc_meta_tr)</span><br><span class="line">acc_meta_tr.append(MetaMessage(<span class="string">&#x27;set_tempo&#x27;</span>, tempo=bpm2tempo(TEMPO_BPM), time=<span class="number">0</span>))</span><br><span class="line">acc_meta_tr.append(MetaMessage(<span class="string">&#x27;time_signature&#x27;</span>, numerator=<span class="number">4</span>, denominator=<span class="number">4</span>, clocks_per_click=<span class="number">24</span>, notated_32nd_notes_per_beat=<span class="number">8</span>, time=<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Chord track (channel 1)</span></span><br><span class="line">chd_tr = MidiTrack(); accompaniment_mid.tracks.append(chd_tr)</span><br><span class="line">chd_tr.append(Message(<span class="string">&#x27;program_change&#x27;</span>, channel=<span class="number">1</span>, program=<span class="number">48</span>, time=<span class="number">0</span>))  <span class="comment"># Strings Ensemble 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加前奏旋律轨道 (channel 2)</span></span><br><span class="line">intro_mel_tr = MidiTrack(); accompaniment_mid.tracks.append(intro_mel_tr)</span><br><span class="line">intro_mel_tr.append(Message(<span class="string">&#x27;program_change&#x27;</span>, channel=<span class="number">2</span>, program=<span class="number">73</span>, time=<span class="number">0</span>))  <span class="comment"># Flute</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Percussion track (channel 9 = drums)</span></span><br><span class="line">per_tr = MidiTrack(); accompaniment_mid.tracks.append(per_tr)</span><br><span class="line"></span><br><span class="line"><span class="comment"># ────────── 人声文件设置 ──────────</span></span><br><span class="line"><span class="comment"># Tempo/Meta track for vocal</span></span><br><span class="line">voc_meta_tr = MidiTrack(); vocal_mid.tracks.append(voc_meta_tr)</span><br><span class="line">voc_meta_tr.append(MetaMessage(<span class="string">&#x27;set_tempo&#x27;</span>, tempo=bpm2tempo(TEMPO_BPM), time=<span class="number">0</span>))</span><br><span class="line">voc_meta_tr.append(MetaMessage(<span class="string">&#x27;time_signature&#x27;</span>, numerator=<span class="number">4</span>, denominator=<span class="number">4</span>, clocks_per_click=<span class="number">24</span>, notated_32nd_notes_per_beat=<span class="number">8</span>, time=<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Melody track (channel 0)</span></span><br><span class="line">mel_tr = MidiTrack(); vocal_mid.tracks.append(mel_tr)</span><br><span class="line">mel_tr.append(Message(<span class="string">&#x27;program_change&#x27;</span>, channel=<span class="number">0</span>, program=<span class="number">0</span>, time=<span class="number">0</span>))  <span class="comment"># Acoustic Grand Piano</span></span><br><span class="line"></span><br><span class="line">PPQ = accompaniment_mid.ticks_per_beat  <span class="comment"># default 480</span></span><br><span class="line">BEAT = PPQ                              <span class="comment"># quarter note</span></span><br><span class="line">BAR  = <span class="number">4</span> * BEAT                         <span class="comment"># one measure of 4/4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ────────── BUILD INTRO ──────────</span></span><br><span class="line"><span class="comment"># 前奏旋律 - 简单的五声音阶旋律，为主旋律做铺垫</span></span><br><span class="line">intro_melody = [</span><br><span class="line">    <span class="comment"># 第1小节 - 简单上行</span></span><br><span class="line">    [<span class="number">60</span>, <span class="number">64</span>, <span class="number">67</span>, <span class="number">69</span>],</span><br><span class="line">    <span class="comment"># 第2小节 - 下行</span></span><br><span class="line">    [<span class="number">67</span>, <span class="number">64</span>, <span class="number">62</span>, <span class="number">60</span>],</span><br><span class="line">    <span class="comment"># 第3小节 - 变化上行</span></span><br><span class="line">    [<span class="number">62</span>, <span class="number">64</span>, <span class="number">67</span>, <span class="number">72</span>],</span><br><span class="line">    <span class="comment"># 第4小节 - 收束</span></span><br><span class="line">    [<span class="number">69</span>, <span class="number">67</span>, <span class="number">64</span>, <span class="number">60</span>]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(INTRO_MEAS):</span><br><span class="line">    <span class="comment"># Chords: sustained C‑G‑C (power chord) for full measure</span></span><br><span class="line">    root = BASE_NOTE</span><br><span class="line">    chd_tr.append(Message(<span class="string">&#x27;note_on&#x27;</span>, channel=<span class="number">1</span>, note=root,   velocity=VELOCITY_CHORDS, time=<span class="number">0</span>))</span><br><span class="line">    chd_tr.append(Message(<span class="string">&#x27;note_on&#x27;</span>, channel=<span class="number">1</span>, note=root+<span class="number">7</span>, velocity=VELOCITY_CHORDS, time=<span class="number">0</span>))</span><br><span class="line">    chd_tr.append(Message(<span class="string">&#x27;note_on&#x27;</span>, channel=<span class="number">1</span>, note=root+<span class="number">12</span>,velocity=VELOCITY_CHORDS, time=<span class="number">0</span>))</span><br><span class="line">    chd_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>,channel=<span class="number">1</span>, note=root,   velocity=<span class="number">0</span>, time=BAR))</span><br><span class="line">    chd_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>,channel=<span class="number">1</span>, note=root+<span class="number">7</span>, velocity=<span class="number">0</span>, time=<span class="number">0</span>))</span><br><span class="line">    chd_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>,channel=<span class="number">1</span>, note=root+<span class="number">12</span>,velocity=<span class="number">0</span>, time=<span class="number">0</span>))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 添加前奏旋律</span></span><br><span class="line">    <span class="keyword">for</span> note_idx, note <span class="keyword">in</span> <span class="built_in">enumerate</span>(intro_melody[m]):</span><br><span class="line">        <span class="comment"># 使用稍微轻柔的力度</span></span><br><span class="line">        intro_mel_tr.append(Message(<span class="string">&#x27;note_on&#x27;</span>, channel=<span class="number">2</span>, note=note, velocity=VELOCITY_MELODY-<span class="number">10</span>, time=<span class="number">0</span>))</span><br><span class="line">        <span class="comment"># 每个音符持续一拍</span></span><br><span class="line">        intro_mel_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>, channel=<span class="number">2</span>, note=note, velocity=<span class="number">0</span>, time=BEAT))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Percussion pattern (kick‑snare alternating, hihat every beat)</span></span><br><span class="line">    <span class="keyword">for</span> beat <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">        <span class="keyword">if</span> beat == <span class="number">0</span> <span class="keyword">or</span> beat == <span class="number">2</span>:</span><br><span class="line">            per_tr.append(Message(<span class="string">&#x27;note_on&#x27;</span>, channel=<span class="number">9</span>, note=KICK,  velocity=VELOCITY_DRUMS, time=<span class="number">0</span>))</span><br><span class="line">            per_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>,channel=<span class="number">9</span>, note=KICK,  velocity=<span class="number">0</span>, time=BEAT//<span class="number">2</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            per_tr.append(Message(<span class="string">&#x27;note_on&#x27;</span>, channel=<span class="number">9</span>, note=SNARE, velocity=VELOCITY_DRUMS, time=<span class="number">0</span>))</span><br><span class="line">            per_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>,channel=<span class="number">9</span>, note=SNARE, velocity=<span class="number">0</span>, time=BEAT//<span class="number">2</span>))</span><br><span class="line">        <span class="comment"># Hi‑hat overlay</span></span><br><span class="line">        per_tr.append(Message(<span class="string">&#x27;note_on&#x27;</span>, channel=<span class="number">9</span>, note=HIHAT, velocity=VELOCITY_DRUMS//<span class="number">2</span>, time=<span class="number">0</span>))</span><br><span class="line">        per_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>,channel=<span class="number">9</span>, note=HIHAT, velocity=<span class="number">0</span>, time=BEAT//<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 人声轨道需要等待前奏结束</span></span><br><span class="line">mel_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>, channel=<span class="number">0</span>, note=<span class="number">0</span>, velocity=<span class="number">0</span>, time=INTRO_MEAS * BAR))</span><br><span class="line"></span><br><span class="line"><span class="comment"># ────────── BUILD 5 GROUPS (MELODY + HARMONY + PERC) ──────────</span></span><br><span class="line"><span class="keyword">for</span> g <span class="keyword">in</span> <span class="built_in">range</span>(GROUPS):</span><br><span class="line">    <span class="comment"># Determine pentatonic shift (0, +1, +2, +3, 0)</span></span><br><span class="line">    steps = <span class="number">0</span> <span class="keyword">if</span> (g == <span class="number">0</span> <span class="keyword">or</span> g == GROUPS - <span class="number">1</span>) <span class="keyword">else</span> g</span><br><span class="line">    motif = transpose_motif(MOTIF, steps)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># For every bar in motif</span></span><br><span class="line">    <span class="keyword">for</span> bar_idx, bar_notes <span class="keyword">in</span> <span class="built_in">enumerate</span>(motif):</span><br><span class="line">        <span class="comment"># Melody — four notes, each one beat (只添加到人声文件)</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> bar_notes:</span><br><span class="line">            mel_tr.append(Message(<span class="string">&#x27;note_on&#x27;</span>, channel=<span class="number">0</span>, note=n, velocity=VELOCITY_MELODY, time=<span class="number">0</span>))</span><br><span class="line">            mel_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>,channel=<span class="number">0</span>, note=n, velocity=<span class="number">0</span>, time=BEAT))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Chord root is the 1st melody note of the bar (添加到伴奏文件)</span></span><br><span class="line">        root = bar_notes[<span class="number">0</span>]</span><br><span class="line">        chd_tr.append(Message(<span class="string">&#x27;note_on&#x27;</span>, channel=<span class="number">1</span>, note=root,   velocity=VELOCITY_CHORDS, time=<span class="number">0</span>))</span><br><span class="line">        chd_tr.append(Message(<span class="string">&#x27;note_on&#x27;</span>, channel=<span class="number">1</span>, note=root+<span class="number">7</span>, velocity=VELOCITY_CHORDS, time=<span class="number">0</span>))</span><br><span class="line">        chd_tr.append(Message(<span class="string">&#x27;note_on&#x27;</span>, channel=<span class="number">1</span>, note=root+<span class="number">12</span>,velocity=VELOCITY_CHORDS, time=<span class="number">0</span>))</span><br><span class="line">        chd_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>,channel=<span class="number">1</span>, note=root,   velocity=<span class="number">0</span>, time=BAR))</span><br><span class="line">        chd_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>,channel=<span class="number">1</span>, note=root+<span class="number">7</span>, velocity=<span class="number">0</span>, time=<span class="number">0</span>))</span><br><span class="line">        chd_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>,channel=<span class="number">1</span>, note=root+<span class="number">12</span>,velocity=<span class="number">0</span>, time=<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Percussion for the bar (添加到伴奏文件)</span></span><br><span class="line">        <span class="keyword">for</span> beat <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">            drum_note = KICK <span class="keyword">if</span> beat <span class="keyword">in</span> (<span class="number">0</span>, <span class="number">2</span>) <span class="keyword">else</span> SNARE</span><br><span class="line">            per_tr.append(Message(<span class="string">&#x27;note_on&#x27;</span>, channel=<span class="number">9</span>, note=drum_note, velocity=VELOCITY_DRUMS, time=<span class="number">0</span>))</span><br><span class="line">            per_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>,channel=<span class="number">9</span>, note=drum_note, velocity=<span class="number">0</span>, time=BEAT//<span class="number">2</span>))</span><br><span class="line">            <span class="comment"># Hi‑hat overlay</span></span><br><span class="line">            per_tr.append(Message(<span class="string">&#x27;note_on&#x27;</span>, channel=<span class="number">9</span>, note=HIHAT, velocity=VELOCITY_DRUMS//<span class="number">2</span>, time=<span class="number">0</span>))</span><br><span class="line">            per_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>,channel=<span class="number">9</span>, note=HIHAT, velocity=<span class="number">0</span>, time=BEAT//<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Add REST_MEAS rest (气口) between groups (skip after last group)</span></span><br><span class="line">    <span class="keyword">if</span> g &lt; GROUPS - <span class="number">1</span>:</span><br><span class="line">        <span class="comment"># 人声轨道暂停</span></span><br><span class="line">        mel_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>, channel=<span class="number">0</span>, note=<span class="number">0</span>, velocity=<span class="number">0</span>, time=REST_MEAS * BAR))</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 改进气口部分的旋律，使其更加优美自然</span></span><br><span class="line">        <span class="comment"># 根据当前小节的最后一个音符创建一个更加优美的过渡旋律</span></span><br><span class="line">        last_note = motif[-<span class="number">1</span>][-<span class="number">1</span>]  <span class="comment"># 获取当前组最后一个音符</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 创建更加优美的气口旋律 - 使用五声音阶中的音符</span></span><br><span class="line">        breath_melody = []</span><br><span class="line">        <span class="keyword">if</span> g % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="comment"># 偶数组后的气口 - 上行旋律</span></span><br><span class="line">            breath_melody = [last_note-<span class="number">5</span>, last_note-<span class="number">2</span>, last_note, last_note+<span class="number">2</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 奇数组后的气口 - 下行旋律</span></span><br><span class="line">            breath_melody = [last_note+<span class="number">2</span>, last_note, last_note-<span class="number">2</span>, last_note-<span class="number">5</span>]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 确保所有音符都在五声音阶中</span></span><br><span class="line">        breath_melody = [note <span class="keyword">for</span> note <span class="keyword">in</span> breath_melody <span class="keyword">if</span> in_scale(note)]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 添加更优美的气口旋律</span></span><br><span class="line">        <span class="keyword">for</span> i, note <span class="keyword">in</span> <span class="built_in">enumerate</span>(breath_melody):</span><br><span class="line">            intro_mel_tr.append(Message(<span class="string">&#x27;note_on&#x27;</span>, channel=<span class="number">2</span>, note=note, velocity=VELOCITY_MELODY-<span class="number">5</span>, time=<span class="number">0</span>))</span><br><span class="line">            <span class="comment"># 使用更长的音符持续时间，创造更流畅的旋律</span></span><br><span class="line">            intro_mel_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>, channel=<span class="number">2</span>, note=note, velocity=<span class="number">0</span>, time=BEAT//<span class="number">2</span>))</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 和弦继续 - 使用更丰富的和弦</span></span><br><span class="line">        chd_tr.append(Message(<span class="string">&#x27;note_on&#x27;</span>, channel=<span class="number">1</span>, note=root-<span class="number">12</span>, velocity=VELOCITY_CHORDS-<span class="number">5</span>, time=<span class="number">0</span>))</span><br><span class="line">        chd_tr.append(Message(<span class="string">&#x27;note_on&#x27;</span>, channel=<span class="number">1</span>, note=root-<span class="number">5</span>, velocity=VELOCITY_CHORDS-<span class="number">5</span>, time=<span class="number">0</span>))</span><br><span class="line">        chd_tr.append(Message(<span class="string">&#x27;note_on&#x27;</span>, channel=<span class="number">1</span>, note=root+<span class="number">4</span>, velocity=VELOCITY_CHORDS-<span class="number">5</span>, time=<span class="number">0</span>))</span><br><span class="line">        chd_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>,channel=<span class="number">1</span>, note=root-<span class="number">12</span>, velocity=<span class="number">0</span>, time=REST_MEAS * BAR))</span><br><span class="line">        chd_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>,channel=<span class="number">1</span>, note=root-<span class="number">5</span>, velocity=<span class="number">0</span>, time=<span class="number">0</span>))</span><br><span class="line">        chd_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>,channel=<span class="number">1</span>, note=root+<span class="number">4</span>, velocity=<span class="number">0</span>, time=<span class="number">0</span>))</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 打击乐继续 - 使用更丰富的节奏模式</span></span><br><span class="line">        <span class="keyword">for</span> beat <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span> * REST_MEAS):</span><br><span class="line">            <span class="keyword">if</span> beat % <span class="number">4</span> == <span class="number">0</span>:</span><br><span class="line">                drum_note = KICK</span><br><span class="line">                velocity = VELOCITY_DRUMS-<span class="number">5</span></span><br><span class="line">            <span class="keyword">elif</span> beat % <span class="number">4</span> == <span class="number">2</span>:</span><br><span class="line">                drum_note = SNARE</span><br><span class="line">                velocity = VELOCITY_DRUMS-<span class="number">10</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                drum_note = HIHAT</span><br><span class="line">                velocity = VELOCITY_DRUMS-<span class="number">15</span></span><br><span class="line">                </span><br><span class="line">            per_tr.append(Message(<span class="string">&#x27;note_on&#x27;</span>, channel=<span class="number">9</span>, note=drum_note, velocity=velocity, time=<span class="number">0</span>))</span><br><span class="line">            per_tr.append(Message(<span class="string">&#x27;note_off&#x27;</span>,channel=<span class="number">9</span>, note=drum_note, velocity=<span class="number">0</span>, time=BEAT//<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># ────────── SAVE FILES ──────────</span></span><br><span class="line">ACCOMPANIMENT_MIDI = <span class="string">&quot;poem_accompaniment.mid&quot;</span></span><br><span class="line">VOCAL_MIDI = <span class="string">&quot;poem_vocal.mid&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存MIDI文件</span></span><br><span class="line">accompaniment_mid.save(ACCOMPANIMENT_MIDI)</span><br><span class="line">vocal_mid.save(VOCAL_MIDI)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;✅ 伴奏MIDI文件已生成: <span class="subst">&#123;ACCOMPANIMENT_MIDI&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;✅ 人声MIDI文件已生成: <span class="subst">&#123;VOCAL_MIDI&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>保存音频，加入X studio中对齐伴奏和人声</li><li>调整虚拟歌姬的咬字与旋律</li><li>不断重复上述步骤直到满意</li></ul><hr><h3 id="🌌-4-Sora生成古风循环动态画面"><a href="#🌌-4-Sora生成古风循环动态画面" class="headerlink" title="🌌 4. Sora生成古风循环动态画面"></a>🌌 4. Sora生成古风循环动态画面</h3><ul><li>使用 Sora 根据关键词 <code>“夜色/花落/月影/古风水面”</code> 生成动态场景。</li><li>控制画面为 <strong>15s循环</strong>，与音乐拍点对齐：<ul><li>第一节：花瓣飘落</li><li>第二节：水中倒影波动</li><li>第三节：远山与云光慢慢流动</li></ul></li></ul><h4 id="🌀-示例-prompt："><a href="#🌀-示例-prompt：" class="headerlink" title="🌀 示例 prompt："></a>🌀 示例 prompt：</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">泛着波光的湖面上，远山隐约可见，画面整体温柔、留白、古典，适合用作古风音乐视频背景。循环播放、静谧优雅.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python程序设计-AI音乐</title>
      <link href="/2025/05/30/AI%E9%9F%B3%E4%B9%90%E4%BD%9C%E4%B8%9A%EF%BC%881%EF%BC%89-%20%E7%BA%AF%E9%9F%B3%E4%B9%90/"/>
      <url>/2025/05/30/AI%E9%9F%B3%E4%B9%90%E4%BD%9C%E4%B8%9A%EF%BC%881%EF%BC%89-%20%E7%BA%AF%E9%9F%B3%E4%B9%90/</url>
      
        <content type="html"><![CDATA[<h1 id="AI音乐生成演示"><a href="#AI音乐生成演示" class="headerlink" title="AI音乐生成演示"></a>AI音乐生成演示</h1><p>通过使用pretty_midi库，我们实现了自动作曲功能，可以生成具有不同风格的MIDI音乐。</p><div style="text-align:center">  <video controls         playsinline webkit-playsinline x5-playsinline         preload="metadata"         width="640"         style="max-width:100%;background:#000;">    <source src="/videos/ai-music.mp4" type="video/mp4">    您的浏览器不支持 HTML5 视频。  </video></div><h1 id="省流版演示"><a href="#省流版演示" class="headerlink" title="省流版演示"></a>省流版演示</h1><p>这是一个简短版本的演示视频，直接展示最后的成品。</p><div style="text-align:center">  <video controls         playsinline webkit-playsinline x5-playsinline         preload="metadata"         width="640"         style="max-width:100%;background:#000;">    <source src="/videos/final-music.mp4" type="video/mp4">    您的浏览器不支持 HTML5 视频。  </video></div>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
